; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = 
;	esp32cam
	esp01_1m	
	

; You MUST inject these options into [env:] section
; using ${env.***} (see below)
;arduino-libraries/
[common_env_data]
lib_deps_esp32_essential_builtin =
	WiFi
	HTTPUpdate
	Wire
	SPI

lib_deps_esp01_essential_builtin =
	ESP8266WiFi
	ESP8266HTTPClient
	ESP8266httpUpdate
	Wire
	SPI

lib_deps_esp8266_builtin =
	ArduinoOTA 
	DNSServer 
	EEPROM
	esp8266
	ESP8266AVRISP
	ESP8266HTTPClient
	ESP8266httpUpdate
	ESP8266HTTPUpdateServer
	ESP8266LLMNR
	ESP8266mDNS
	ESP8266NetBIOS
	ESP8266SdFat
	ESP8266SSDP
	ESP8266WebServer
	ESP8266WiFi
	ESP8266WiFiMesh
	Ethernet
	GDBStub
	Hash
	I2S
	LittleFS
	lwIP_enc28j60
	lwIP_PPP
	lwIP_w5100
	lwIP_w5500
	Netdump
	SD
	SDFS
	Servo
	SoftwareSerial
	SPI
	SPISlave
	TFT_Touch_Shield_V2
	Ticker
	Wire
	
lib_deps_esp32_builtin =
	ArduinoOTA
	ESP32 Async UDP
	ESP32 BLE Arduino
	BluetoothSerial 
	DNSServer 
	EEPROM 
	ESP32 
	ESPmDNS 
	Ethernet 
	FFat 
	FS 
	HTTPClient 
	HTTPUpdate 
	HTTPUpdateServer 
	LittleFS
	NetBIOS 
	Preferences 
	ESP RainMaker
	SD
	SD_MMC 
	SPI
	SPIFFS 
	SimpleBLE 
	Ticker 
	USB
	Update 
	WebServer 
	WiFi 
	WiFiClientSecure 
	WiFiProv 
	Wire
	
lib_deps_esp32_external =
	bblanchon/ArduinoJson @ ^6.19.4
	adafruit/Adafruit ADS1X15 @ ^2.4.0
;	gilmaimon/ArduinoWebsockets @ ^0.5.3
	https://github.com/me-no-dev/ESPAsyncTCP.git
	https://github.com/me-no-dev/ESPAsyncWebServer.git

lib_deps_esp01_external =
	bblanchon/ArduinoJson @ ^6.19.4
	adafruit/Adafruit ADS1X15 @ ^2.4.0
	https://github.com/me-no-dev/ESPAsyncTCP.git
	https://github.com/me-no-dev/ESPAsyncWebServer.git
	

[env:esp32cam]	
extra_scripts =
	pre:scripts/versioning/pre_extra_script.py
	post:scripts/versioning/post_extra_script.py
; set platform, for stable set "espressif32" for upstream "https://github.com/platformio/platform-espressif32.git"
platform = espressif32 @ 4.2.0
board = esp32cam
framework = arduino
; set Upload speed 
upload_speed = 921600
; set CPU frequency [Hz] 
board_build.f_cpu = 240000000L
; set Flash frequency [Hz]
board_build.f_flash = 80000000L
; set Flash mode 
board_build.flash_mode = qio
; Unflag
build_unflags = -Wunknown-pragmas
	-O0 -O1 -O2 -O3 -Os -Og -Oz
	-DBOARD_HAS_PSRAM 
	-mfix-esp32-psram-cache-issue
;	-O0 -O1 -O2 -O3 -Os -Ofast -Og -Oz
; set Core Debug level
build_flags = -DCORE_DEBUG_LEVEL=1
	-D LV_LVGL_H_INCLUDE_SIMPLE
	-DCAMERA_MODEL_AI_THINKER
	-Ofast
	-fdata-sections -ffunction-sections -Wl,--gc-sections

; set CPP Build Flags that are exclusive to Source Code
build_src_flags = -Wno-unknown-pragmas
	-Wall -Wextra -Wshadow -Wdouble-promotion
	-Werror=restrict
	-Werror=return-type
	-Werror=sequence-point
	-Werror=sizeof-pointer-memaccess
	-Werror=switch

; flash size 
board_upload.flash_size=4MB
; set partition scheme (.platformio\packages\framework-arduinoespressif32\tools\partitions)
board_build.partitions = huge_app.csv
;board_build.partitions = partitions_custom.csv
; set project libraries
lib_deps = 
	${common_env_data.lib_deps_esp32_essential_builtin}
	${common_env_data.lib_deps_esp32_external}
;lib_extra_dirs = 
; libraries to ignore 
lib_ignore =
  ESPAsyncTCP
; https://docs.platformio.org/en/latest/librarymanager/ldf.html#dependency-finder-mode
lib_ldf_mode = deep+
; upload port 
;upload_port = COM3
;monitor_port = COM3
;monitor_port = socket://192.168.0.14:80/Debug
; Serial Monitor options
monitor_filters = esp32_exception_decoder 
monitor_speed = 115200
; See https://docs.platformio.org/en/latest/core/userguide/device/cmd_monitor.html#cmd-device-monitor
monitor_flags=
    --parity
    N
    --encoding
    UTF-8




; ESP01
[env:esp01_1m]
extra_scripts =
	pre:scripts/versioning/pre_extra_script.py
	post:scripts/versioning/post_extra_script.py
platform = espressif8266 @ 4.0.1
;platform_packages removed see https://community.platformio.org/t/problem-with-xtensa-esp32-elf-when-compiling/20736/2
board = esp01_1m
framework = arduino
; set CPU frequency [Hz] 
;board_build.f_cpu = 80000000L
; set Flash frequency [Hz]
;board_build.f_flash = 40000000L
; set Flash mode 
;board_build.flash_mode = qio
; Unflag
build_unflags = -Wunknown-pragmas
;	-O0 -O1 -O2 -O3 -Ofast -Og -Oz
;	-O0 -O1 -O2 -O3 -Os -Ofast -Og -Oz
; set Core Debug level 
build_flags = -Os
	-D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH 
	-D BEARSSL_SSL_BASIC
	-DNDEBUG
	-fdata-sections -ffunction-sections -Wl,--gc-sections
;	-fgcse-after-reload 
;	-fipa-cp-clone
;	-floop-interchange 
;	-floop-unroll-and-jam 
;	-fpeel-loops 
;	-fpredictive-commoning 
;	-fsplit-loops 
;	-fsplit-paths 
;	-ftree-loop-distribution 
;	-ftree-partial-pre 
;	-funswitch-loops 
;	-fvect-cost-model=dynamic 
;	-ffast-math
;	-Wfatal-errors
	
; set CPP Build Flags that are exclusive to Source Code
build_src_flags = -Wno-unknown-pragmas
	-Wall -Wextra -Wshadow -Wdouble-promotion
	-Werror=restrict
	-Werror=return-type
	-Werror=sequence-point
	-Werror=sizeof-pointer-memaccess
	-Werror=switch
; set partition scheme (.platformio\packages\framework-arduinoespressif32\tools\partitions)
;board_build.partitions = min_spiffs.csv
;board_build.partitions = huge_app.csv
; set project libraries
lib_deps = 
	${common_env_data.lib_deps_esp01_essential_builtin}
	${common_env_data.lib_deps_esp01_external}
;	
; libraries to ignore 
;lib_ignore = ESPAsyncTCP
; https://docs.platformio.org/en/latest/librarymanager/ldf.html#dependency-finder-mode
;lib_ldf_mode = deep+

; upload_protocol values are esptool and espota
;upload_protocol = espota
; upload port may be COM or IP
;upload_port = 192.168.0.16
; upload_resetmethod possible values:
; 	ck - RTS controls RESET or CH_PD, DTR controls GPIO0
; 	wifio - TXD controls GPIO0 via PNP transistor and DTR controls RESET via a capacitor
; 	nodemcu - GPIO0 and RESET controlled using two NPN transistors as in NodeMCU devkit.
upload_resetmethod = ck  
; set Upload speed 
upload_speed = 115200
;monitor_port = socket://192.168.0.14:80/Debug
; Serial Monitor options
monitor_filters = esp8266_exception_decoder 
; Serial Monitor BaudRate
monitor_speed = 115200
; See https://docs.platformio.org/en/latest/core/userguide/device/cmd_monitor.html#cmd-device-monitor
monitor_flags= 
	--parity 
	N 
	--encoding 
	UTF-8
	